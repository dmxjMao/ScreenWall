此工程为：结构化存储demo工程
demo要做到：
1，启动一个对话框，即读取“初始化数据”，保存在数据结构中，
2，延迟写入，允许撤销――对话框的一批原子操作完成后，才一次写入或撤销
3，听说结构化存储会“膨胀”，如何瘦身
4，配置有按钮要打开另一个配置，递归打开更多配置


必定要求开发要有
1，良好的结构化设计
2，考虑到可能的扩展
 


 demo设计
 一个公告static
 仿word配置界面，配置项同word
 尝试如何读写



 初始化主界面
 读取stg，读取公告内容，布局公告栏、设置公告，stg不关
 读取默认配置项stg，开启线程，读取其余stg，
 布局左边CListctrl，添加配置项，系统主题，默认，
 布局右边对话框区域，默认展示，点击展示，
 设计stg
 点击确定，写入stg，


 设计stg
 将所有配置看成一份“复合文档”
 


 class CStgCfgOperator
 {
 public:
	HRESULT OpenFile(tchar* name, IStorage**);//打开配置复合文档
	//bool IsDefault();
	//HRESULT OpenCfg(StgDetailedCfgs, IStorage**);//根据详细配置枚举，打开相应存储对象或流
	HRESULT OpenCfg(StgDetailedCfgs, IStream**);


private:
	//bool bDefault;//是否使用默认配置
 };